#!/bin/bash

set -e

APPSERVERS=(app1.holderdeord.no app2.holderdeord.no)
DB_STANDBY="88.198.14.8"   # db2, but avoid DNS lookup from app
ES_STANDBY="88.198.15.103" # es2, but avoid DNS lookup from app

function failover_db () {
  echo "Failing over DB to standby @ ${DB_STANDBY}... http://wiki.postgresql.org/wiki/Binary_Replication_Tutorial#Failing_Over_To_The_Standby"

  echo "...touching trigger file on ${DB_STANDBY}"
  ssh -t "${DB_STANDBY}" "sudo su - postgres -c 'touch /var/lib/postgresql/failover'"

  for appserver in "${APPSERVERS[@]}"
  do
    echo "...manually changing config on ${appserver} (next deploy will overwrite this change!)"
    ssh "hdo@${appserver}" "sed -i.bak -r -e 's/host: .+/host: ${DB_STANDBY}/g' /webapps/hdo-site/current/config/database.yml && touch /webapps/hdo-site/current/tmp/restart.txt"
  done
}

function failover_es () {
  echo "Failing over elasticsearch to node @ ${ES_STANDBY}..."

  for appserver in "${APPSERVERS[@]}"
  do
    echo "...manually changing config on ${appserver} (next deploy will overwrite this change!)"
    ssh "hdo@${appserver}" "sed -i.bak -r -e 's/ELASTICSEARCH_URL: .+/ELASTICSEARCH_URL: http:\/\/${ES_STANDBY}:9200/g' /webapps/hdo-site/current/config/env.yml && touch /webapps/hdo-site/current/tmp/restart.txt"
  done
}

case "$1" in
  db)
    failover_db
    ;;
  es)
    failover_es
    ;;
  *)
    echo "USAGE: $0 [db|es]"
    ;;
esac
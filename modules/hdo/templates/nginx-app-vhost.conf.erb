#
# This file is managed by Puppet. Local edits will be lost.
#

server {
  listen 80;
  server_name "holderdeord.no";

  return 301 $scheme://www.holderdeord.no$request_uri;
}

server {
  listen      <%= listen %>;
  root        <%= scope.lookupvar('public_dir') %>;
  server_name <%= server_name %> "~^(beta|www)\.holderdeord\.no$";

  <% if ssl == true %>
    listen 443 default ssl;

    ssl_protocols              SSLv3 TLSv1;
    ssl_ciphers                HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;

    ssl_certificate            <%= ssl_path %>.crt;
    ssl_certificate_key        <%= ssl_path %>.key;

    ssl_session_cache          shared:SSL:10m;
    ssl_session_timeout        5m;
  <% end %>

  location ~ .(php)$ {
    deny all;
  }

  try_files $uri /system/maintenance.html @passenger;

  location @passenger {
    passenger_enabled       on;
    passenger_min_instances <%= scope.lookupvar('passenger::params::min_instances') %>;
    passenger_set_cgi_param HTTP_X_FORWARDED_PROTO $scheme;

    rails_env <%= scope.lookupvar('hdo::params::environment') %>;
  }

  error_page 500 502 504 /500.html;
  error_page 503 @503;

  location = /50x.html {
    root html;
  }

  location = /404.html {
    root html;
  }

  location @503 {
    error_page 405 = /system/maintenance.html;
    if (-f $document_root/system/maintenance.html) {
      rewrite ^(.*)$ /system/maintenance.html break;
    }
    rewrite ^(.*)$ /503.html break;
  }

  if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE|OPTIONS)$ ){
    return 405;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }

  location ~ ^/(assets|images|javascripts|stylesheets|swfs|system|uploads)/ {
    gzip_static on;
    expires     max;
    add_header  Cache-Control public;
    add_header  Last-Modified "";
    add_header  ETag "";
    break;
  }

  location = /favicon.ico {
    expires    max;
    add_header Cache-Control public;
  }

  #
  # page caching (won't be needed when we have varnish)
  # this needs to be at the end of this file
  #
  # TODO: use try_files

  # only cache GETs
  if ($request_method !~ ^(GET|HEAD)$) {
    break;
  }

  # root
  if (-f $document_root/cache/$uri/index.html) {
    rewrite (.*) /cache/$1/index.html break;
  }

  # pages like /about, cached with .html but accessed without
  if (-f $document_root/cache/$uri.html) {
    rewrite (.*) /cache/$1.html break;
  }

  # pages like /api/v1/something.xml, cached as xml
  if (-f $document_root/cache/$uri) {
    rewrite (.*) /cache/$1 break;
  }
}
